version: 2.1
commands:
  install-bazel-linux-rbe:
    steps:
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/build-tools/master/ci/install-bazel-linux.sh
      - run: bash ./install-bazel-linux.sh && rm ./install-bazel-linux.sh
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/build-tools/master/ci/install-bazel-rbe.sh
      - run: bash ./install-bazel-rbe.sh && rm ./install-bazel-rbe.sh

  run-bazel-rbe:
    parameters:
      command:
        type: string
    steps:
      - run: bazel run @graknlabs_build_tools//ci:run-bazel-rbe -- << parameters.command >>

  run-grakn-server:
    steps:
      - run-bazel-rbe:
          command: bazel build @graknlabs_grakn_core//:assemble-linux-targz
      - run: mkdir dist && tar -xvzf bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-linux.tar.gz -C ./dist/
      - run: nohup ./dist/grakn-core-all-linux/grakn server start

jobs:
  build:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
#      - run: bazel run @graknlabs_build_tools//checkstyle:test-coverage
      - run: bazel --host_jvm_args=-Xmx16g build //...

  test-assembly-linux-mock:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: bazel build @graknlabs_grakn_core//:assemble-linux-targz
      - run: mkdir dist && tar -xvzf bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-linux.tar.gz -C ./dist/
      - run: nohup ./dist/grakn-core-all-linux/grakn server start
      - run: bazel test //migrator:assemble-mock-test
      - run: ./dist/grakn-core-all-linux/grakn server stop
  test-assembly-mac-mock:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: bazel build @graknlabs_grakn_core//:assemble-mac-zip
      - run: unzip bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-mac.zip -d bazel-genfiles/external/graknlabs_grakn_core/
      - run: nohup bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-mac/grakn server start
      - run: bazel test //migrator:assemble-mock-test
      - run: bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-mac/grakn server stop
  test-assembly-windows-mock:
    machine: true
    working_directory: ~/biograkn
    steps:
      - run: echo 'CI job placeholder'


  assembly-linux-full:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: bazel build @graknlabs_grakn_core//:assemble-linux-targz
      - run: mkdir dist && tar -xvzf bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-linux.tar.gz -C ./dist/
      - run: nohup ./dist/grakn-core-all-linux/grakn server start
#      - run: bazel run //migrator:migrator-bin
      - run: ./dist/grakn-core-all-linux/grakn server stop
      - run: mv ./dist/grakn-core-all-linux ./dist/biograkn-linux
      - run: tar -czf ./dist/biograkn-linux.tar.gz ./dist/biograkn-linux
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory. This is a directory on the container which is
          # taken to be the root directory of the workspace.
          root: ./dist
          # Must be relative path from root
          paths:
            - biograkn-linux.tar.gz


  test-assembly-linux-full:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ./dist
      - run: tar -xvzf ./dist/biograkn-linux.tar.gz
      - run: nohup ./dist/biograkn-linux/grakn server start
#      - run: bazel test //migrator:assemble-all-test TODO: uncomment
      - run: ./dist/biograkn-linux/grakn server stop



  test-assembly-mac-full:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: bazel build @graknlabs_grakn_core//:assemble-mac-zip
      - run: unzip bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-mac.zip -d bazel-genfiles/external/graknlabs_grakn_core/
      - run: nohup bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-mac/grakn server start
#      - run: bazel test //migrator:assemble-all-test TODO: uncomment
      - run: bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-mac/grakn server stop
  test-assembly-windows-full:
    machine: true
    working_directory: ~/biograkn
    steps:
      - run: echo 'CI job placeholder'

  deploy-gcp-snapshot:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: |
          export DEPLOY_PACKER_GCP_ACCOUNT_FILE=$(mktemp)
          echo $GCP_DEPLOY_KEY_SNAPSHOT > $DEPLOY_PACKER_GCP_ACCOUNT_FILE
          export DEPLOY_PACKER_VERSION=$(git rev-parse HEAD)
          bazel run //:deploy-gcp-snapshot

  test-deployment-gcp:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: pip install google-api-python-client paramiko pyyaml google-auth cryptography==2.4.2
      - run: GCP_DEPLOY_KEY=$GCP_DEPLOY_KEY_SNAPSHOT test/deployment/gcp.py

  release-approval:
    machine: true
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: |
          export RELEASE_APPROVAL_TOKEN=$REPO_GITHUB_TOKEN_GRABL
          bazel run @graknlabs_build_tools//ci:release-approval

  deploy-github:
    machine: true
    working_directory: ~/biograkn
    steps:
      - run: echo 'CI job placeholder'

  deploy-gcp:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
#      - run: | # TODO: implement this job
#          sed -i -e 's/\./-/g' VERSION
#          export DEPLOY_PACKER_GCP_ACCOUNT_FILE=$(mktemp)
#          echo $GCP_DEPLOY_KEY_RELEASE > $DEPLOY_PACKER_GCP_ACCOUNT_FILE
#          export DEPLOY_PACKER_VERSION=$(cat VERSION)
#          bazel run --config=rbe //:deploy-gcp-release




  release-cleanup:
    machine: true
    steps:
      - checkout
      - run: |
          git push --delete \
            "https://$REPO_GITHUB_USERNAME:$REPO_GITHUB_TOKEN@github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.git" \
            biograkn-release-branch

workflows:
  test: # TODO: remove after test
    jobs:
      - assembly-linux-full:
          filters:
              branches:
                only: release-workflow
      - test-assembly-linux-full:
          filters:
            branches:
              only: release-workflow
          requires:
            - assembly-linux-full
#  biograkn-commit:
#    jobs:
#      - build:
#          filters:
#            branches:
#              ignore: biograkn-release-branch
#
#      - test-assembly-linux-mock:
#          filters:
#            branches:
#              ignore: biograkn-release-branch
#          requires:
#            - build
#      - test-assembly-mac-mock:
#          filters:
#            branches:
#              ignore: biograkn-release-branch
#          requires:
#            - build
#
#  biograkn-nightly:
#    triggers:
#      - schedule:
#          cron: "0 19 * * *" # UTC
#          filters:
#            branches:
#              only:
#                - master
#    jobs:
#      - test-assembly-linux-full:
#          filters:
#            branches:
#              only: master
#      - -assembly-mac-full:
#          filters:
#            branches:
#              only: master
#
#      - test-deployment-gcp:
#          filters:
#            branches:
#              only: master
#          requires:
#            - test-assembly-linux-full
#            - test-assembly-mac-full
#
#      - release-approval:
#          filters:
#            branches:
#              only: master
#          requires:
#            - test-deployment-gcp
#
#  biograkn-release:
#    jobs:
#      - test-assembly-linux-full:
#          filters:
#            branches:
#              only: release-workflow # TODO: change to biograkn-release-branch
#      - test-assembly-mac-full:
#          filters:
#            branches:
#              only: release-workflow # TODO: change to biograkn-release-branch
#
#      - deploy-github:
#          filters:
#            branches:
#              only: release-workflow # TODO: change to biograkn-release-branch
#          requires:
#            - test-assembly-linux-full
#            - test-assembly-mac-full
#
#      - deploy-approval:
#          type: approval
#          filters:
#            branches:
#              only: release-workflow # TODO: change to biograkn-release-branch
#          requires:
#            - deploy-github
#
#      - deploy-gcp:
#          filters:
#            branches:
#              only: release-workflow # TODO: change to biograkn-release-branch
#          requires:
#            - deploy-approval
#            - test-assembly-linux-full
#
#      - release-cleanup:
#          filters:
#            branches:
#              only: release-workflow # TODO: change to biograkn-release-branch
#          requires:
#            - test-assembly-linux-full
#            - test-assembly-mac-full
##            - test-assembly-windows-full
#            - deploy-gcp
#            - deploy-github
