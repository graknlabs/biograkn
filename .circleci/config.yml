#
# GRAKN.AI - THE KNOWLEDGE GRAPH
# Copyright (C) 2018 Grakn Labs Ltd
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

version: 2.1
commands:
  install-bazel-linux-rbe:
    steps:
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/build-tools/master/ci/install-bazel-linux.sh
      - run: bash ./install-bazel-linux.sh && rm ./install-bazel-linux.sh
      - run: curl -OL https://raw.githubusercontent.com/graknlabs/build-tools/master/ci/install-bazel-rbe.sh
      - run: bash ./install-bazel-rbe.sh && rm ./install-bazel-rbe.sh

  run-bazel-rbe:
    parameters:
      command:
        type: string
    steps:
      - run: bazel run @graknlabs_build_tools//ci:run-bazel-rbe -- << parameters.command >>

  run-grakn-server:
    steps:
      - run-bazel-rbe:
          command: bazel build @graknlabs_grakn_core//:assemble-linux-targz
      - run: mkdir dist && tar -xvzf bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-linux.tar.gz -C ./dist/
      - run: nohup ./dist/grakn-core-all-linux/grakn server start

jobs:
  build:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
#      - run: bazel run @graknlabs_build_tools//checkstyle:test-coverage
      - run: bazel --host_jvm_args=-Xmx16g build //...

  test:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run-bazel-rbe:
          command: bazel test //migrator:migrator-test --test_output=errors

  test-assembly-linux-mock:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: bazel build @graknlabs_grakn_core//:assemble-linux-targz
      - run: mkdir dist && tar -xvzf bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-linux.tar.gz -C ./dist/
      - run: nohup ./dist/grakn-core-all-linux/grakn server start
#      - run: bazel test //test/common:grakn-application-test --test_output=streamed --spawn_strategy=standalone --cache_test_results=no
      - run: nohup ./dist/grakn-core-all-linux/grakn server stop

  test-assembly-mac-mock:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: bazel build @graknlabs_grakn_core//:assemble-mac-zip
      - run: unzip bazel-genfiles/grakn-core-all-mac.zip -d bazel-genfiles/external/graknlabs_grakn_core/
      - run: nohup bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-mac/grakn server start
#      - run: bazel test //test/common:grakn-application-test --test_output=streamed --spawn_strategy=standalone --cache_test_results=no
      - run: bazel-genfiles/external/graknlabs_grakn_core/grakn-core-all-mac/grakn server stop


  test-assembly-windows-mock:
    machine: true
    working_directory: ~/biograkn
    steps:
      - run: echo 'CI job placeholder'

  test-assembly-linux-full:
    machine: true
    working_directory: ~/biograkn
    steps:
      - run: echo 'CI job placeholder'
  test-assembly-mac-full:
    machine: true
    working_directory: ~/biograkn
    steps:
      - run: echo 'CI job placeholder'
  test-assembly-windows-full:
    machine: true
    working_directory: ~/biograkn
    steps:
      - run: echo 'CI job placeholder'

  test-deployment-gcp:
    machine: true
    working_directory: ~/biograkn
    steps:
      - run: echo 'CI job placeholder'

  release-approval:
    machine: true
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: |
          export RELEASE_APPROVAL_TOKEN=$REPO_GITHUB_TOKEN_GRABL
          bazel run @graknlabs_build_tools//ci:release-approval

  deploy-github:
    machine: true
    working_directory: ~/biograkn
    steps:
      - install-bazel-linux-rbe
      - checkout
      - run: echo 'CI job placeholder'

  deploy-approval:
    machine: true
    working_directory: ~/biograkn
    steps:
      - run: echo 'CI job placeholder'

  deploy-gcp:
    machine: true
    working_directory: ~/biograkn
    steps:
      - run: echo 'CI job placeholder'

  release-cleanup:
    machine: true
    steps:
      - checkout
      - run: echo 'CI job placeholder'

workflows:
  biograkn:
    jobs:
#      - build: TODO: uncomment this
#          filters:
#            branches:
#              ignore: biograkn-release-branch
#      - test:  TODO: uncomment this
#          filters:
#            branches:
#              ignore: biograkn-release-branch

      - test-assembly-linux-mock:
          filters:
            branches:
              only: cicleci-pipeline #TODO:  change to master
          requires:
            - build
#            - test
      - test-assembly-mac-mock:
          filters:
            branches:
              only: cicleci-pipeline #TODO:  change to master
          requires:
            - build
#            - test
#      - test-assembly-windows-mock:
#          filters:
#            branches:
#              only: cicleci-pipeline #TODO:  change to master
#          requires:
#            - build
#            - test
#
#      - test-assembly-linux-full:
#          filters:
#            branches:
#              only: cicleci-pipeline #TODO:  change to master
#          requires:
#            - build
#            - test
#      - test-assembly-mac-full:
#          filters:
#            branches:
#              only: cicleci-pipeline #TODO:  change to master
#          requires:
#            - build
#            - test
#      - test-assembly-windows-full:
#          filters:
#            branches:
#              only: cicleci-pipeline #TODO:  change to master
#          requires:
#            - build
#            - test
#
#      - test-deployment-gcp:
#          filters:
#            branches:
#              only: cicleci-pipeline #TODO: change to master
#          requires:
#            - test-assembly-linux-mock
#            - test-assembly-mac-mock
#            - test-assembly-windows-mock
#            - test-assembly-linux-full
#            - test-assembly-mac-full
#            - test-assembly-windows-full
#      - release-approval:
#          filters:
#            branches:
#              only: cicleci-pipeline #TODO: change to master
#          requires:
#            - test-deployment-gcp

  biograkn-release:
    jobs:
      - test-assembly-linux-full:
          filters:
            branches:
              only: cicleci-pipeline #TODO:  change to biograkn-release-branch
      - test-assembly-mac-full:
          filters:
            branches:
              only: cicleci-pipeline #TODO:  change to biograkn-release-branch
      - test-assembly-windows-full:
          filters:
            branches:
              only: cicleci-pipeline #TODO:  change to biograkn-release-branch

      - deploy-github:
          filters:
            branches:
              only: cicleci-pipeline #TODO: change to biograkn-release-branch
          requires:
            - test-assembly-linux-full
            - test-assembly-mac-full
            - test-assembly-windows-full
      - deploy-approval:
          filters:
            branches:
              only: cicleci-pipeline #TODO: change to biograkn-release-branch
          requires:
            - deploy-github
      - deploy-gcp:
          filters:
            branches:
              only: cicleci-pipeline #TODO: change to biograkn-release-branch
          requires:
            - deploy-approval
            - test-assembly-linux-full

      - release-cleanup:
          filters:
            branches:
              only: cicleci-pipeline #TODO: change to biograkn-release-branch
          requires:
            - test-assembly-linux-full
            - test-assembly-mac-full
            - test-assembly-windows-full
            - deploy-gcp
            - deploy-github