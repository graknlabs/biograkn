# Copyright 2017 Grakn Labs Ltd. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


{% import "path_utils.jinja" as path_utils with context %}

{% set project = env["project"] %}
{% set deployment = env["deployment"] %}
{% set namePrefix = env["deployment"] %}
{% set zone = properties["zone"] %}
{% set numReplicas = properties["numReplicas"] %}
{% set machineType = properties["machineType"] %}
{% set network = path_utils.networkPath(properties["network"]) %}
{% set subnetwork = properties["subnetwork"] %}
{% set bootDiskType = properties["bootDiskType"] %}
{% set bootDiskSizeGb = properties["bootDiskSizeGb"] %}
{% set dataDiskType = properties["dataDiskType"] %}
{% set dataDiskSize = properties["dataDiskSize"] %}
{% set dataDiskSuffix = "vm-data" %}
{% set dataDiskName = namePrefix ~ dataDiskSuffix %}
{% set hasExternalIP = properties["externalIP"] != "None" %}
{# Software status only works if the VM has an external IP. #}
{% set enableStatusWaiter = hasExternalIP %}
{% set canIpForward = properties["ipForward"] == "On" %}

{% macro hostname(prefix, id) -%}
{{ "%s-%d-vm"|format(prefix, id)  }}
{%- endmacro %}

{% macro bootstrapnode() -%}
  {{ hostname(namePrefix, 1) }}
{%- endmacro %}

{% macro extra_seed_node() -%}
  {{ hostname(namePrefix, 2) }}
{%- endmacro %}

resources:
  - name: user-generated-password
    type: password.py
    properties:
     length: 12
     includeSymbols: False

  - name: system-generated-password
    type: password.py
    properties:
     length: 12
     includeSymbols: False

  - name: {{ namePrefix }}
    type: vm_multiple_instances.py
    properties:
      zone: {{ zone }}
      machineType: {{ machineType }}
      numberOfVMReplicas: {{ numReplicas }}
      sourceImage: https://www.googleapis.com/compute/v1/projects/grakn-dev/global/images/# {SOURCE_IMAGE_PLACEHOLDER}
      network: {{ network }}
      {% if subnetwork %}
      subnetwork: {{ subnetwork }}
      {% endif %}
      bootDiskType: {{ bootDiskType }}
      bootDiskSizeGb: {{ bootDiskSizeGb }}
      hasExternalIP: {{ hasExternalIP }}
      canIpForward: {{ canIpForward }}
      serviceAccounts:
        - email: default
          scopes:
            - 'https://www.googleapis.com/auth/cloud.useraccounts.readonly'
            - 'https://www.googleapis.com/auth/devstorage.read_only'
            - 'https://www.googleapis.com/auth/logging.write'
            - 'https://www.googleapis.com/auth/monitoring.write'

      disks:
        - deviceName: {{ dataDiskSuffix  }}
          type: PERSISTENT
          diskType: {{ dataDiskType }}
          diskSizeGb: {{ dataDiskSize }}
          boot: False
          autoDelete: True

      tags:
        items:
          - {{ env["deployment"] }}-tcp-48555

      metadata:
        items:
        - key: startup-script
          value: /opt/c2d/startup-script.sh
        - key: shutdown-script
          value: /opt/c2d/shutdown-script.sh
        - key: BOOTSTRAPNODE
          value: "{{ bootstrapnode() | trim }}"
        - key: EXTRA_SEED_NODE
          value: "{{ extra_seed_node() | trim }}"
        - key: NO_OF_NODES
          value: {{ numReplicas }}
        - key: STORAGE_USER_PWD
          value: $(ref.user-generated-password.password)
        - key: STORAGE_SYSTEM_PWD
          value: $(ref.system-generated-password.password)
# {SSH_KEYS_PLACEHOLDER}

  {% if properties["enableTcp48555"] %}
  - name: {{ env["deployment"] }}-tcp-48555
    type: compute.v1.firewall
    properties:
      network: {{ network }}
      {% if properties.get("tcp48555SourceRanges") %}
      sourceRanges:
        {% for source in properties["tcp48555SourceRanges"].split(',') %}
        - '{{ source | trim }}'
        {% endfor %}
      {% else %}
      sourceRanges: ["0.0.0.0/0"]
      {% endif %}
      targetTags: ["{{ env["deployment"] }}-tcp-48555"]
      allowed:
        - IPProtocol: TCP
          ports: ["48555"]
  {% endif %}

outputs:
  - name: deployment
    value: {{ deployment }}
  - name: project
    value: {{ project }}
  - name: instanceName
    value: {{ hostname(namePrefix, 1)  }}
  - name: vmId
    value: $(ref.{{ hostname(namePrefix, 1) }}.id)
  - name: vmName
    value: {{ instanceName }}
  - name: storageUserPassword
    value: $(ref.user-generated-password.password)
  - name: vmSelfLink
    value: $(ref.{{ hostname(namePrefix, 1) }}.selfLink)
